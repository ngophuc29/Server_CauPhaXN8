import * as winston from 'winston';
const LOG_CONFIG = {
    level: 'info',
    exitOnError: false,
    transports: [new winston.transports.Console()],
    format: winston.format.combine(winston.format.timestamp({ format: 'DD-MM-YYYY HH:mm:ss' }), winston.format.align(), winston.format.colorize(), winston.format.printf((info) => `${info.level}: ${[info.timestamp]}: ${info.message}`))
};
export function createLogger(config) {
    const logger = winston.createLogger(config);
    return logger;
}
export class Logger {
    constructor() {
        this.initLogger();
    }
    initLogger() {
        if (!this.logger) {
            this.logger = createLogger(LOG_CONFIG);
        }
    }
    logError(msg) {
        this.logger.error(msg);
    }
    logInfo(msg) {
        this.logger.info(msg);
    }
    logDebug(msg) {
        this.logger.debug(msg);
    }
}
